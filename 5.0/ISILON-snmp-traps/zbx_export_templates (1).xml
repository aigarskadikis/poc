<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2021-11-24T21:12:42Z</date>
    <groups>
        <group>
            <name>Templates/Modules</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>ISILON snmp traps</template>
            <name>ISILON snmp traps</name>
            <description>ZABBIX_IP=127.0.0.1&#13;
&#13;
&gt; /tmp/zabbix_traps.tmp&#13;
&#13;
Problem event:&#13;
/usr/bin/snmptrap -M /usr/share/snmp/mibs:/usr/share/snmp/mibs/isilon -m ALL -v 2c -c &quot;public&quot; $ZABBIX_IP:162 &quot;&quot; ISILON-TRAP-MIB::testEventEmerg ISILON-TRAP-MIB::testEventEmerg s &quot;192.168.1.1&quot;&#13;
&#13;
Recovery event:&#13;
/usr/bin/snmptrap -M /usr/share/snmp/mibs:/usr/share/snmp/mibs/isilon -m ALL -v 2c -c &quot;public&quot; $ZABBIX_IP:162 &quot;&quot; ISILON-TRAP-MIB::testEventEmergClear ISILON-TRAP-MIB::testEventEmergClear s &quot;192.168.1.1&quot;</description>
            <groups>
                <group>
                    <name>Templates/Modules</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>auditCeeUnreachable</name>
                </application>
                <application>
                    <name>avscanError</name>
                </application>
                <application>
                    <name>avscanInfectedFile</name>
                </application>
                <application>
                    <name>avscanNoServersConf</name>
                </application>
                <application>
                    <name>bootDiskFail</name>
                </application>
                <application>
                    <name>bootDiskMirrorReqMissing</name>
                </application>
                <application>
                    <name>bootDiskNotSup</name>
                </application>
                <application>
                    <name>celogHeartBeatEvent</name>
                </application>
                <application>
                    <name>certificationExpiration</name>
                </application>
                <application>
                    <name>checkCluster</name>
                </application>
                <application>
                    <name>clockSkew</name>
                </application>
                <application>
                    <name>cloudpoolAuthenticationError</name>
                </application>
                <application>
                    <name>cloudpoolAuthorizationError</name>
                </application>
                <application>
                    <name>cloudpoolBucketNotFoundError</name>
                </application>
                <application>
                    <name>cloudpoolCertificateError</name>
                </application>
                <application>
                    <name>cloudpoolDataCorruptionIntegrityError</name>
                </application>
                <application>
                    <name>cloudpoolNetworkError</name>
                </application>
                <application>
                    <name>cloudpoolNoUsableAccountFoundError</name>
                </application>
                <application>
                    <name>cloudpoolObjectNotFoundError</name>
                </application>
                <application>
                    <name>clusterMonthlyStatus</name>
                </application>
                <application>
                    <name>dedupeInlineDegraded</name>
                </application>
                <application>
                    <name>dedupeInlineFailure</name>
                </application>
                <application>
                    <name>dedupeInlineNonStandard</name>
                </application>
                <application>
                    <name>dedupeInlineNotSupported</name>
                </application>
                <application>
                    <name>dedupeInvalidDirectory</name>
                </application>
                <application>
                    <name>diskError</name>
                </application>
                <application>
                    <name>diskNodeOffline</name>
                </application>
                <application>
                    <name>diskPoolOldDbVersion</name>
                </application>
                <application>
                    <name>diskPoolSize</name>
                </application>
                <application>
                    <name>diskPoolUnbalanced</name>
                </application>
                <application>
                    <name>diskPoolUsage</name>
                </application>
                <application>
                    <name>driveStatus</name>
                </application>
                <application>
                    <name>filesysError</name>
                </application>
                <application>
                    <name>firmwareUpdateIncomplete</name>
                </application>
                <application>
                    <name>flexProtectRunning</name>
                </application>
                <application>
                    <name>hardwareError</name>
                </application>
                <application>
                    <name>hardwareErrorMsg</name>
                </application>
                <application>
                    <name>hwClusterVersionError</name>
                </application>
                <application>
                    <name>hwCpuThrottle</name>
                </application>
                <application>
                    <name>hwError</name>
                </application>
                <application>
                    <name>hwFanOther</name>
                </application>
                <application>
                    <name>hwFanOver</name>
                </application>
                <application>
                    <name>hwFanUnder</name>
                </application>
                <application>
                    <name>hwInfinityAdaptiveCooling</name>
                </application>
                <application>
                    <name>hwInfinityArmPmpFailure</name>
                </application>
                <application>
                    <name>hwInfinityBatteryBackupFault</name>
                </application>
                <application>
                    <name>hwInfinityCompressionHWReset</name>
                </application>
                <application>
                    <name>hwInfinityCompressionHWUnavail</name>
                </application>
                <application>
                    <name>hwInfinityCompressionHWUnhealthy</name>
                </application>
                <application>
                    <name>hwInfinityComputeFault</name>
                </application>
                <application>
                    <name>hwInfinityCorrectedHwError</name>
                </application>
                <application>
                    <name>hwInfinityDelayedReboot</name>
                </application>
                <application>
                    <name>hwInfinityDIBFault</name>
                </application>
                <application>
                    <name>hwInfinityDimmFault</name>
                </application>
                <application>
                    <name>hwInfinityExternalFault</name>
                </application>
                <application>
                    <name>hwInfinityFanFault</name>
                </application>
                <application>
                    <name>hwInfinityI2cFault</name>
                </application>
                <application>
                    <name>hwInfinityInternalfault</name>
                </application>
                <application>
                    <name>hwInfinityIOModuleFault</name>
                </application>
                <application>
                    <name>hwInfinityJmStateError</name>
                </application>
                <application>
                    <name>hwInfinityLocalBmcFault</name>
                </application>
                <application>
                    <name>hwInfinityM2DriveFault</name>
                </application>
                <application>
                    <name>hwInfinityMidplaneFault</name>
                </application>
                <application>
                    <name>hwInfinityMnviProtoError</name>
                </application>
                <application>
                    <name>hwInfinityNtbLinkOutage</name>
                </application>
                <application>
                    <name>hwInfinityNtbPciFault</name>
                </application>
                <application>
                    <name>hwInfinityPeerBmcFault</name>
                </application>
                <application>
                    <name>hwInfinityPmpFailure</name>
                </application>
                <application>
                    <name>hwInfinityPowerRedundancyFault</name>
                </application>
                <application>
                    <name>hwInfinityPowerSupplyFault</name>
                </application>
                <application>
                    <name>hwIPMIFanError</name>
                </application>
                <application>
                    <name>hwIPMIOtherError</name>
                </application>
                <application>
                    <name>hwIPMITempError</name>
                </application>
                <application>
                    <name>hwIPMIVoltageError</name>
                </application>
                <application>
                    <name>hwMem</name>
                </application>
                <application>
                    <name>hwPower</name>
                </application>
                <application>
                    <name>hwPwrSupplyOver</name>
                </application>
                <application>
                    <name>hwPwrSupplyUnder</name>
                </application>
                <application>
                    <name>hwTempOver</name>
                </application>
                <application>
                    <name>hwTempUnder</name>
                </application>
                <application>
                    <name>hwVersionError</name>
                </application>
                <application>
                    <name>hwVoltageOver</name>
                </application>
                <application>
                    <name>hwVoltageUnder</name>
                </application>
                <application>
                    <name>jobEngineCluster</name>
                </application>
                <application>
                    <name>jobEngineError</name>
                </application>
                <application>
                    <name>jobEngineJobPhaseBegin</name>
                </application>
                <application>
                    <name>jobEngineJobPhaseEnd</name>
                </application>
                <application>
                    <name>jobEngineJobPolicy</name>
                </application>
                <application>
                    <name>jobEngineJobState</name>
                </application>
                <application>
                    <name>kernVmProcessKilled</name>
                </application>
                <application>
                    <name>keyManagerCloudPoolsDomainFailed</name>
                </application>
                <application>
                    <name>keyManagerSedsDomainFailed</name>
                </application>
                <application>
                    <name>licenseActivationIncomplete</name>
                </application>
                <application>
                    <name>licenseEntitlementsExceeded</name>
                </application>
                <application>
                    <name>licenseExpiration</name>
                </application>
                <application>
                    <name>lwioCAThrottling</name>
                </application>
                <application>
                    <name>lwioMemoryThrottling</name>
                </application>
                <application>
                    <name>lwioParam</name>
                </application>
                <application>
                    <name>mcpProcFailed</name>
                </application>
                <application>
                    <name>mcpProcKilled</name>
                </application>
                <application>
                    <name>mixedSedNonSedCluster</name>
                </application>
                <application>
                    <name>mountdClientMountFailed</name>
                </application>
                <application>
                    <name>mountdHostLookupFailed</name>
                </application>
                <application>
                    <name>netAggStatus</name>
                </application>
                <application>
                    <name>netFabricMgmtConnectivity</name>
                </application>
                <application>
                    <name>netFabricSNMPConnectivity</name>
                </application>
                <application>
                    <name>netFabricStatus</name>
                </application>
                <application>
                    <name>netIntStatus</name>
                </application>
                <application>
                    <name>netStatus</name>
                </application>
                <application>
                    <name>nfsCookieTranslationFailed</name>
                </application>
                <application>
                    <name>nfsIdentityQueryFailed</name>
                </application>
                <application>
                    <name>nodeShutdown</name>
                </application>
                <application>
                    <name>nodeStatus</name>
                </application>
                <application>
                    <name>partitionUsage</name>
                </application>
                <application>
                    <name>pdmServiceDegraded</name>
                </application>
                <application>
                    <name>quotaError</name>
                </application>
                <application>
                    <name>quotaNotifyError</name>
                </application>
                <application>
                    <name>quotaThreshError</name>
                </application>
                <application>
                    <name>sasPhyErrorController</name>
                </application>
                <application>
                    <name>sasPhyErrorExpander</name>
                </application>
                <application>
                    <name>sensorMonitor</name>
                </application>
                <application>
                    <name>siqError</name>
                </application>
                <application>
                    <name>snapshotError</name>
                </application>
                <application>
                    <name>snapshotReserve</name>
                </application>
                <application>
                    <name>SNMP trap</name>
                </application>
                <application>
                    <name>srsProblem</name>
                </application>
                <application>
                    <name>ssdUsage</name>
                </application>
                <application>
                    <name>suggestedProtection</name>
                </application>
                <application>
                    <name>testEvent</name>
                </application>
                <application>
                    <name>testEvent2</name>
                </application>
                <application>
                    <name>testEventEmerg</name>
                </application>
                <application>
                    <name>trap</name>
                </application>
                <application>
                    <name>underprovisionedNodePool</name>
                </application>
                <application>
                    <name>unprovisionedNode</name>
                </application>
                <application>
                    <name>upgradeClusterEvent</name>
                </application>
                <application>
                    <name>upgradeFinish</name>
                </application>
                <application>
                    <name>upgradeHang</name>
                </application>
                <application>
                    <name>upgradeHookHang</name>
                </application>
                <application>
                    <name>upgradeNodeEvent</name>
                </application>
                <application>
                    <name>upgradeRollbackStart</name>
                </application>
                <application>
                    <name>upgradeStart</name>
                </application>
                <application>
                    <name>winAuthUpgrade</name>
                </application>
                <application>
                    <name>winIDmapRulesParseFail</name>
                </application>
                <application>
                    <name>winNetAuth</name>
                </application>
                <application>
                    <name>winNetMapFull</name>
                </application>
                <application>
                    <name>winSmbUpgrade</name>
                </application>
                <application>
                    <name>winTimeConnectivityLost</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>auditCeeUnreachableCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(auditCeeUnreachableCrit|auditCeeUnreachableCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>auditCeeUnreachable</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(auditCeeUnreachableCritClear)}=0</expression>
                            <name>auditCeeUnreachableCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>auditCeeUnreachableEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(auditCeeUnreachableEmerg|auditCeeUnreachableEmergClear)&quot;].str(auditCeeUnreachableEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>auditCeeUnreachableEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(auditCeeUnreachableEmerg|auditCeeUnreachableEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>auditCeeUnreachable</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(auditCeeUnreachableEmergClear)}=0</expression>
                            <name>auditCeeUnreachableEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>avscanErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(avscanErrorCrit|avscanErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>avscanError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(avscanErrorCritClear)}=0</expression>
                            <name>avscanErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>avscanErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(avscanErrorEmerg|avscanErrorEmergClear)&quot;].str(avscanErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>avscanErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(avscanErrorEmerg|avscanErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>avscanError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(avscanErrorEmergClear)}=0</expression>
                            <name>avscanErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>avscanInfectedFileCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(avscanInfectedFileCrit|avscanInfectedFileCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>avscanInfectedFile</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(avscanInfectedFileCritClear)}=0</expression>
                            <name>avscanInfectedFileCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>avscanInfectedFileEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(avscanInfectedFileEmerg|avscanInfectedFileEmergClear)&quot;].str(avscanInfectedFileEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>avscanInfectedFileEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(avscanInfectedFileEmerg|avscanInfectedFileEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>avscanInfectedFile</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(avscanInfectedFileEmergClear)}=0</expression>
                            <name>avscanInfectedFileEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>avscanNoServersConfCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(avscanNoServersConfCrit|avscanNoServersConfCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>avscanNoServersConf</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(avscanNoServersConfCritClear)}=0</expression>
                            <name>avscanNoServersConfCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>avscanNoServersConfEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(avscanNoServersConfEmerg|avscanNoServersConfEmergClear)&quot;].str(avscanNoServersConfEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>avscanNoServersConfEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(avscanNoServersConfEmerg|avscanNoServersConfEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>avscanNoServersConf</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(avscanNoServersConfEmergClear)}=0</expression>
                            <name>avscanNoServersConfEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>bootDiskFailCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(bootDiskFailCrit|bootDiskFailCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>bootDiskFail</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(bootDiskFailCritClear)}=0</expression>
                            <name>bootDiskFailCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>bootDiskFailEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(bootDiskFailEmerg|bootDiskFailEmergClear)&quot;].str(bootDiskFailEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>bootDiskFailEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(bootDiskFailEmerg|bootDiskFailEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>bootDiskFail</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(bootDiskFailEmergClear)}=0</expression>
                            <name>bootDiskFailEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>bootDiskMirrorReqMissingCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(bootDiskMirrorReqMissingCrit|bootDiskMirrorReqMissingCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>bootDiskMirrorReqMissing</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(bootDiskMirrorReqMissingCritClear)}=0</expression>
                            <name>bootDiskMirrorReqMissingCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>bootDiskMirrorReqMissingEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(bootDiskMirrorReqMissingEmerg|bootDiskMirrorReqMissingEmergClear)&quot;].str(bootDiskMirrorReqMissingEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>bootDiskMirrorReqMissingEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(bootDiskMirrorReqMissingEmerg|bootDiskMirrorReqMissingEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>bootDiskMirrorReqMissing</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(bootDiskMirrorReqMissingEmergClear)}=0</expression>
                            <name>bootDiskMirrorReqMissingEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>bootDiskNotSupCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(bootDiskNotSupCrit|bootDiskNotSupCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>bootDiskNotSup</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(bootDiskNotSupCritClear)}=0</expression>
                            <name>bootDiskNotSupCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>bootDiskNotSupEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(bootDiskNotSupEmerg|bootDiskNotSupEmergClear)&quot;].str(bootDiskNotSupEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>bootDiskNotSupEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(bootDiskNotSupEmerg|bootDiskNotSupEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>bootDiskNotSup</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(bootDiskNotSupEmergClear)}=0</expression>
                            <name>bootDiskNotSupEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>celogHeartBeatEventCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(celogHeartBeatEventCrit|celogHeartBeatEventCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>celogHeartBeatEvent</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(celogHeartBeatEventCritClear)}=0</expression>
                            <name>celogHeartBeatEventCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>celogHeartBeatEventEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(celogHeartBeatEventEmerg|celogHeartBeatEventEmergClear)&quot;].str(celogHeartBeatEventEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>celogHeartBeatEventEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(celogHeartBeatEventEmerg|celogHeartBeatEventEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>celogHeartBeatEvent</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(celogHeartBeatEventEmergClear)}=0</expression>
                            <name>celogHeartBeatEventEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>certificationExpirationCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(certificationExpirationCrit|certificationExpirationCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>certificationExpiration</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(certificationExpirationCritClear)}=0</expression>
                            <name>certificationExpirationCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>certificationExpirationEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(certificationExpirationEmerg|certificationExpirationEmergClear)&quot;].str(certificationExpirationEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>certificationExpirationEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(certificationExpirationEmerg|certificationExpirationEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>certificationExpiration</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(certificationExpirationEmergClear)}=0</expression>
                            <name>certificationExpirationEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>checkClusterCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(checkClusterCrit|checkClusterCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>checkCluster</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(checkClusterCritClear)}=0</expression>
                            <name>checkClusterCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>checkClusterEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(checkClusterEmerg|checkClusterEmergClear)&quot;].str(checkClusterEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>checkClusterEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(checkClusterEmerg|checkClusterEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>checkCluster</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(checkClusterEmergClear)}=0</expression>
                            <name>checkClusterEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>clockSkewCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(clockSkewCrit|clockSkewCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>clockSkew</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(clockSkewCritClear)}=0</expression>
                            <name>clockSkewCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>clockSkewEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(clockSkewEmerg|clockSkewEmergClear)&quot;].str(clockSkewEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>clockSkewEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(clockSkewEmerg|clockSkewEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>clockSkew</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(clockSkewEmergClear)}=0</expression>
                            <name>clockSkewEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolAuthenticationErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolAuthenticationErrorCrit|cloudpoolAuthenticationErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolAuthenticationError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolAuthenticationErrorCritClear)}=0</expression>
                            <name>cloudpoolAuthenticationErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>cloudpoolAuthenticationErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(cloudpoolAuthenticationErrorEmerg|cloudpoolAuthenticationErrorEmergClear)&quot;].str(cloudpoolAuthenticationErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolAuthenticationErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolAuthenticationErrorEmerg|cloudpoolAuthenticationErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolAuthenticationError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolAuthenticationErrorEmergClear)}=0</expression>
                            <name>cloudpoolAuthenticationErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolAuthorizationErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolAuthorizationErrorCrit|cloudpoolAuthorizationErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolAuthorizationError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolAuthorizationErrorCritClear)}=0</expression>
                            <name>cloudpoolAuthorizationErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>cloudpoolAuthorizationErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(cloudpoolAuthorizationErrorEmerg|cloudpoolAuthorizationErrorEmergClear)&quot;].str(cloudpoolAuthorizationErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolAuthorizationErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolAuthorizationErrorEmerg|cloudpoolAuthorizationErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolAuthorizationError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolAuthorizationErrorEmergClear)}=0</expression>
                            <name>cloudpoolAuthorizationErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolBucketNotFoundErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolBucketNotFoundErrorCrit|cloudpoolBucketNotFoundErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolBucketNotFoundError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolBucketNotFoundErrorCritClear)}=0</expression>
                            <name>cloudpoolBucketNotFoundErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>cloudpoolBucketNotFoundErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(cloudpoolBucketNotFoundErrorEmerg|cloudpoolBucketNotFoundErrorEmergClear)&quot;].str(cloudpoolBucketNotFoundErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolBucketNotFoundErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolBucketNotFoundErrorEmerg|cloudpoolBucketNotFoundErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolBucketNotFoundError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolBucketNotFoundErrorEmergClear)}=0</expression>
                            <name>cloudpoolBucketNotFoundErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolCertificateErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolCertificateErrorCrit|cloudpoolCertificateErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolCertificateError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolCertificateErrorCritClear)}=0</expression>
                            <name>cloudpoolCertificateErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>cloudpoolCertificateErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(cloudpoolCertificateErrorEmerg|cloudpoolCertificateErrorEmergClear)&quot;].str(cloudpoolCertificateErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolCertificateErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolCertificateErrorEmerg|cloudpoolCertificateErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolCertificateError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolCertificateErrorEmergClear)}=0</expression>
                            <name>cloudpoolCertificateErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolDataCorruptionIntegrityErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolDataCorruptionIntegrityErrorCrit|cloudpoolDataCorruptionIntegrityErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolDataCorruptionIntegrityError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolDataCorruptionIntegrityErrorCritClear)}=0</expression>
                            <name>cloudpoolDataCorruptionIntegrityErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>cloudpoolDataCorruptionIntegrityErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(cloudpoolDataCorruptionIntegrityErrorEmerg|cloudpoolDataCorruptionIntegrityErrorEmergClear)&quot;].str(cloudpoolDataCorruptionIntegrityErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolDataCorruptionIntegrityErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolDataCorruptionIntegrityErrorEmerg|cloudpoolDataCorruptionIntegrityErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolDataCorruptionIntegrityError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolDataCorruptionIntegrityErrorEmergClear)}=0</expression>
                            <name>cloudpoolDataCorruptionIntegrityErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolNetworkErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolNetworkErrorCrit|cloudpoolNetworkErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolNetworkError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolNetworkErrorCritClear)}=0</expression>
                            <name>cloudpoolNetworkErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>cloudpoolNetworkErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(cloudpoolNetworkErrorEmerg|cloudpoolNetworkErrorEmergClear)&quot;].str(cloudpoolNetworkErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolNetworkErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolNetworkErrorEmerg|cloudpoolNetworkErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolNetworkError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolNetworkErrorEmergClear)}=0</expression>
                            <name>cloudpoolNetworkErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolNoUsableAccountFoundErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolNoUsableAccountFoundErrorCrit|cloudpoolNoUsableAccountFoundErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolNoUsableAccountFoundError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolNoUsableAccountFoundErrorCritClear)}=0</expression>
                            <name>cloudpoolNoUsableAccountFoundErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>cloudpoolNoUsableAccountFoundErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(cloudpoolNoUsableAccountFoundErrorEmerg|cloudpoolNoUsableAccountFoundErrorEmergClear)&quot;].str(cloudpoolNoUsableAccountFoundErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolNoUsableAccountFoundErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolNoUsableAccountFoundErrorEmerg|cloudpoolNoUsableAccountFoundErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolNoUsableAccountFoundError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolNoUsableAccountFoundErrorEmergClear)}=0</expression>
                            <name>cloudpoolNoUsableAccountFoundErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolObjectNotFoundErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolObjectNotFoundErrorCrit|cloudpoolObjectNotFoundErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolObjectNotFoundError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolObjectNotFoundErrorCritClear)}=0</expression>
                            <name>cloudpoolObjectNotFoundErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>cloudpoolObjectNotFoundErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(cloudpoolObjectNotFoundErrorEmerg|cloudpoolObjectNotFoundErrorEmergClear)&quot;].str(cloudpoolObjectNotFoundErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>cloudpoolObjectNotFoundErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(cloudpoolObjectNotFoundErrorEmerg|cloudpoolObjectNotFoundErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>cloudpoolObjectNotFoundError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(cloudpoolObjectNotFoundErrorEmergClear)}=0</expression>
                            <name>cloudpoolObjectNotFoundErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>clusterMonthlyStatusCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(clusterMonthlyStatusCrit|clusterMonthlyStatusCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>clusterMonthlyStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(clusterMonthlyStatusCritClear)}=0</expression>
                            <name>clusterMonthlyStatusCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>clusterMonthlyStatusEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(clusterMonthlyStatusEmerg|clusterMonthlyStatusEmergClear)&quot;].str(clusterMonthlyStatusEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>clusterMonthlyStatusEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(clusterMonthlyStatusEmerg|clusterMonthlyStatusEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>clusterMonthlyStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(clusterMonthlyStatusEmergClear)}=0</expression>
                            <name>clusterMonthlyStatusEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInlineDegradedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInlineDegradedCrit|dedupeInlineDegradedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInlineDegraded</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInlineDegradedCritClear)}=0</expression>
                            <name>dedupeInlineDegradedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>dedupeInlineDegradedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(dedupeInlineDegradedEmerg|dedupeInlineDegradedEmergClear)&quot;].str(dedupeInlineDegradedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInlineDegradedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInlineDegradedEmerg|dedupeInlineDegradedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInlineDegraded</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInlineDegradedEmergClear)}=0</expression>
                            <name>dedupeInlineDegradedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInlineFailureCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInlineFailureCrit|dedupeInlineFailureCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInlineFailure</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInlineFailureCritClear)}=0</expression>
                            <name>dedupeInlineFailureCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>dedupeInlineFailureEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(dedupeInlineFailureEmerg|dedupeInlineFailureEmergClear)&quot;].str(dedupeInlineFailureEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInlineFailureEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInlineFailureEmerg|dedupeInlineFailureEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInlineFailure</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInlineFailureEmergClear)}=0</expression>
                            <name>dedupeInlineFailureEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInlineNonStandardCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInlineNonStandardCrit|dedupeInlineNonStandardCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInlineNonStandard</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInlineNonStandardCritClear)}=0</expression>
                            <name>dedupeInlineNonStandardCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>dedupeInlineNonStandardEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(dedupeInlineNonStandardEmerg|dedupeInlineNonStandardEmergClear)&quot;].str(dedupeInlineNonStandardEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInlineNonStandardEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInlineNonStandardEmerg|dedupeInlineNonStandardEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInlineNonStandard</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInlineNonStandardEmergClear)}=0</expression>
                            <name>dedupeInlineNonStandardEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInlineNotSupportedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInlineNotSupportedCrit|dedupeInlineNotSupportedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInlineNotSupported</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInlineNotSupportedCritClear)}=0</expression>
                            <name>dedupeInlineNotSupportedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>dedupeInlineNotSupportedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(dedupeInlineNotSupportedEmerg|dedupeInlineNotSupportedEmergClear)&quot;].str(dedupeInlineNotSupportedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInlineNotSupportedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInlineNotSupportedEmerg|dedupeInlineNotSupportedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInlineNotSupported</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInlineNotSupportedEmergClear)}=0</expression>
                            <name>dedupeInlineNotSupportedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInvalidDirectoryCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInvalidDirectoryCrit|dedupeInvalidDirectoryCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInvalidDirectory</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInvalidDirectoryCritClear)}=0</expression>
                            <name>dedupeInvalidDirectoryCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>dedupeInvalidDirectoryEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(dedupeInvalidDirectoryEmerg|dedupeInvalidDirectoryEmergClear)&quot;].str(dedupeInvalidDirectoryEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>dedupeInvalidDirectoryEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(dedupeInvalidDirectoryEmerg|dedupeInvalidDirectoryEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>dedupeInvalidDirectory</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(dedupeInvalidDirectoryEmergClear)}=0</expression>
                            <name>dedupeInvalidDirectoryEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskErrorCrit|diskErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskErrorCritClear)}=0</expression>
                            <name>diskErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>diskErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(diskErrorEmerg|diskErrorEmergClear)&quot;].str(diskErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskErrorEmerg|diskErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskErrorEmergClear)}=0</expression>
                            <name>diskErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskNodeOfflineCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskNodeOfflineCrit|diskNodeOfflineCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskNodeOffline</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskNodeOfflineCritClear)}=0</expression>
                            <name>diskNodeOfflineCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>diskNodeOfflineEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(diskNodeOfflineEmerg|diskNodeOfflineEmergClear)&quot;].str(diskNodeOfflineEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskNodeOfflineEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskNodeOfflineEmerg|diskNodeOfflineEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskNodeOffline</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskNodeOfflineEmergClear)}=0</expression>
                            <name>diskNodeOfflineEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskPoolOldDbVersionCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskPoolOldDbVersionCrit|diskPoolOldDbVersionCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskPoolOldDbVersion</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolOldDbVersionCritClear)}=0</expression>
                            <name>diskPoolOldDbVersionCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>diskPoolOldDbVersionEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(diskPoolOldDbVersionEmerg|diskPoolOldDbVersionEmergClear)&quot;].str(diskPoolOldDbVersionEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskPoolOldDbVersionEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskPoolOldDbVersionEmerg|diskPoolOldDbVersionEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskPoolOldDbVersion</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolOldDbVersionEmergClear)}=0</expression>
                            <name>diskPoolOldDbVersionEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskPoolSizeCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskPoolSizeCrit|diskPoolSizeCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskPoolSize</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolSizeCritClear)}=0</expression>
                            <name>diskPoolSizeCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>diskPoolSizeEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(diskPoolSizeEmerg|diskPoolSizeEmergClear)&quot;].str(diskPoolSizeEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskPoolSizeEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskPoolSizeEmerg|diskPoolSizeEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskPoolSize</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolSizeEmergClear)}=0</expression>
                            <name>diskPoolSizeEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskPoolUnbalancedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskPoolUnbalancedCrit|diskPoolUnbalancedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskPoolUnbalanced</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolUnbalancedCritClear)}=0</expression>
                            <name>diskPoolUnbalancedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>diskPoolUnbalancedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(diskPoolUnbalancedEmerg|diskPoolUnbalancedEmergClear)&quot;].str(diskPoolUnbalancedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskPoolUnbalancedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskPoolUnbalancedEmerg|diskPoolUnbalancedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskPoolUnbalanced</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolUnbalancedEmergClear)}=0</expression>
                            <name>diskPoolUnbalancedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskPoolUsageCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskPoolUsageCrit|diskPoolUsageCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskPoolUsage</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolUsageCritClear)}=0</expression>
                            <name>diskPoolUsageCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>diskPoolUsageEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(diskPoolUsageEmerg|diskPoolUsageEmergClear)&quot;].str(diskPoolUsageEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>diskPoolUsageEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(diskPoolUsageEmerg|diskPoolUsageEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>diskPoolUsage</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolUsageEmergClear)}=0</expression>
                            <name>diskPoolUsageEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>driveStatusCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(driveStatusCrit|driveStatusCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>driveStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(driveStatusCritClear)}=0</expression>
                            <name>driveStatusCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>driveStatusEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(driveStatusEmerg|driveStatusEmergClear)&quot;].str(driveStatusEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>driveStatusEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(driveStatusEmerg|driveStatusEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>driveStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(driveStatusEmergClear)}=0</expression>
                            <name>driveStatusEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>filesysErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(filesysErrorCrit|filesysErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>filesysError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(filesysErrorCritClear)}=0</expression>
                            <name>filesysErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>filesysErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(filesysErrorEmerg|filesysErrorEmergClear)&quot;].str(filesysErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>filesysErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(filesysErrorEmerg|filesysErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>filesysError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(filesysErrorEmergClear)}=0</expression>
                            <name>filesysErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>firmwareUpdateIncompleteCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(firmwareUpdateIncompleteCrit|firmwareUpdateIncompleteCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>firmwareUpdateIncomplete</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(firmwareUpdateIncompleteCritClear)}=0</expression>
                            <name>firmwareUpdateIncompleteCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>firmwareUpdateIncompleteEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(firmwareUpdateIncompleteEmerg|firmwareUpdateIncompleteEmergClear)&quot;].str(firmwareUpdateIncompleteEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>firmwareUpdateIncompleteEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(firmwareUpdateIncompleteEmerg|firmwareUpdateIncompleteEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>firmwareUpdateIncomplete</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(firmwareUpdateIncompleteEmergClear)}=0</expression>
                            <name>firmwareUpdateIncompleteEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>flexProtectRunningCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(flexProtectRunningCrit|flexProtectRunningCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>flexProtectRunning</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(flexProtectRunningCritClear)}=0</expression>
                            <name>flexProtectRunningCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>flexProtectRunningEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(flexProtectRunningEmerg|flexProtectRunningEmergClear)&quot;].str(flexProtectRunningEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>flexProtectRunningEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(flexProtectRunningEmerg|flexProtectRunningEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>flexProtectRunning</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(flexProtectRunningEmergClear)}=0</expression>
                            <name>flexProtectRunningEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hardwareErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hardwareErrorCrit|hardwareErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hardwareError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hardwareErrorCritClear)}=0</expression>
                            <name>hardwareErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hardwareErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hardwareErrorEmerg|hardwareErrorEmergClear)&quot;].str(hardwareErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hardwareErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hardwareErrorEmerg|hardwareErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hardwareError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hardwareErrorEmergClear)}=0</expression>
                            <name>hardwareErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hardwareErrorMsgCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hardwareErrorMsgCrit|hardwareErrorMsgCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hardwareErrorMsg</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hardwareErrorMsgCritClear)}=0</expression>
                            <name>hardwareErrorMsgCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hardwareErrorMsgEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hardwareErrorMsgEmerg|hardwareErrorMsgEmergClear)&quot;].str(hardwareErrorMsgEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hardwareErrorMsgEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hardwareErrorMsgEmerg|hardwareErrorMsgEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hardwareErrorMsg</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hardwareErrorMsgEmergClear)}=0</expression>
                            <name>hardwareErrorMsgEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwClusterVersionErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwClusterVersionErrorCrit|hwClusterVersionErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwClusterVersionError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwClusterVersionErrorCritClear)}=0</expression>
                            <name>hwClusterVersionErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwClusterVersionErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwClusterVersionErrorEmerg|hwClusterVersionErrorEmergClear)&quot;].str(hwClusterVersionErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwClusterVersionErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwClusterVersionErrorEmerg|hwClusterVersionErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwClusterVersionError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwClusterVersionErrorEmergClear)}=0</expression>
                            <name>hwClusterVersionErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwCpuThrottleCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwCpuThrottleCrit|hwCpuThrottleCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwCpuThrottle</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwCpuThrottleCritClear)}=0</expression>
                            <name>hwCpuThrottleCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwCpuThrottleEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwCpuThrottleEmerg|hwCpuThrottleEmergClear)&quot;].str(hwCpuThrottleEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwCpuThrottleEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwCpuThrottleEmerg|hwCpuThrottleEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwCpuThrottle</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwCpuThrottleEmergClear)}=0</expression>
                            <name>hwCpuThrottleEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwErrorCrit|hwErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwErrorCritClear)}=0</expression>
                            <name>hwErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwErrorEmerg|hwErrorEmergClear)&quot;].str(hwErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwErrorEmerg|hwErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwErrorEmergClear)}=0</expression>
                            <name>hwErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwFanOtherCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwFanOtherCrit|hwFanOtherCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwFanOther</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwFanOtherCritClear)}=0</expression>
                            <name>hwFanOtherCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwFanOtherEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwFanOtherEmerg|hwFanOtherEmergClear)&quot;].str(hwFanOtherEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwFanOtherEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwFanOtherEmerg|hwFanOtherEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwFanOther</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwFanOtherEmergClear)}=0</expression>
                            <name>hwFanOtherEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwFanOverCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwFanOverCrit|hwFanOverCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwFanOver</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwFanOverCritClear)}=0</expression>
                            <name>hwFanOverCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwFanOverEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwFanOverEmerg|hwFanOverEmergClear)&quot;].str(hwFanOverEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwFanOverEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwFanOverEmerg|hwFanOverEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwFanOver</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwFanOverEmergClear)}=0</expression>
                            <name>hwFanOverEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwFanUnderCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwFanUnderCrit|hwFanUnderCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwFanUnder</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwFanUnderCritClear)}=0</expression>
                            <name>hwFanUnderCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwFanUnderEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwFanUnderEmerg|hwFanUnderEmergClear)&quot;].str(hwFanUnderEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwFanUnderEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwFanUnderEmerg|hwFanUnderEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwFanUnder</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwFanUnderEmergClear)}=0</expression>
                            <name>hwFanUnderEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityAdaptiveCoolingCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityAdaptiveCoolingCrit|hwInfinityAdaptiveCoolingCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityAdaptiveCooling</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityAdaptiveCoolingCritClear)}=0</expression>
                            <name>hwInfinityAdaptiveCoolingCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityAdaptiveCoolingEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityAdaptiveCoolingEmerg|hwInfinityAdaptiveCoolingEmergClear)&quot;].str(hwInfinityAdaptiveCoolingEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityAdaptiveCoolingEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityAdaptiveCoolingEmerg|hwInfinityAdaptiveCoolingEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityAdaptiveCooling</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityAdaptiveCoolingEmergClear)}=0</expression>
                            <name>hwInfinityAdaptiveCoolingEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityArmPmpFailureCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityArmPmpFailureCrit|hwInfinityArmPmpFailureCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityArmPmpFailure</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityArmPmpFailureCritClear)}=0</expression>
                            <name>hwInfinityArmPmpFailureCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityArmPmpFailureEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityArmPmpFailureEmerg|hwInfinityArmPmpFailureEmergClear)&quot;].str(hwInfinityArmPmpFailureEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityArmPmpFailureEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityArmPmpFailureEmerg|hwInfinityArmPmpFailureEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityArmPmpFailure</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityArmPmpFailureEmergClear)}=0</expression>
                            <name>hwInfinityArmPmpFailureEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityBatteryBackupFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityBatteryBackupFaultCrit|hwInfinityBatteryBackupFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityBatteryBackupFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityBatteryBackupFaultCritClear)}=0</expression>
                            <name>hwInfinityBatteryBackupFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityBatteryBackupFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityBatteryBackupFaultEmerg|hwInfinityBatteryBackupFaultEmergClear)&quot;].str(hwInfinityBatteryBackupFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityBatteryBackupFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityBatteryBackupFaultEmerg|hwInfinityBatteryBackupFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityBatteryBackupFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityBatteryBackupFaultEmergClear)}=0</expression>
                            <name>hwInfinityBatteryBackupFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityCompressionHWResetCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityCompressionHWResetCrit|hwInfinityCompressionHWResetCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityCompressionHWReset</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityCompressionHWResetCritClear)}=0</expression>
                            <name>hwInfinityCompressionHWResetCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityCompressionHWResetEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityCompressionHWResetEmerg|hwInfinityCompressionHWResetEmergClear)&quot;].str(hwInfinityCompressionHWResetEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityCompressionHWResetEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityCompressionHWResetEmerg|hwInfinityCompressionHWResetEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityCompressionHWReset</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityCompressionHWResetEmergClear)}=0</expression>
                            <name>hwInfinityCompressionHWResetEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityCompressionHWUnavailCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityCompressionHWUnavailCrit|hwInfinityCompressionHWUnavailCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityCompressionHWUnavail</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityCompressionHWUnavailCritClear)}=0</expression>
                            <name>hwInfinityCompressionHWUnavailCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityCompressionHWUnavailEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityCompressionHWUnavailEmerg|hwInfinityCompressionHWUnavailEmergClear)&quot;].str(hwInfinityCompressionHWUnavailEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityCompressionHWUnavailEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityCompressionHWUnavailEmerg|hwInfinityCompressionHWUnavailEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityCompressionHWUnavail</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityCompressionHWUnavailEmergClear)}=0</expression>
                            <name>hwInfinityCompressionHWUnavailEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityCompressionHWUnhealthyCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityCompressionHWUnhealthyCrit|hwInfinityCompressionHWUnhealthyCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityCompressionHWUnhealthy</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityCompressionHWUnhealthyCritClear)}=0</expression>
                            <name>hwInfinityCompressionHWUnhealthyCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityCompressionHWUnhealthyEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityCompressionHWUnhealthyEmerg|hwInfinityCompressionHWUnhealthyEmergClear)&quot;].str(hwInfinityCompressionHWUnhealthyEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityCompressionHWUnhealthyEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityCompressionHWUnhealthyEmerg|hwInfinityCompressionHWUnhealthyEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityCompressionHWUnhealthy</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityCompressionHWUnhealthyEmergClear)}=0</expression>
                            <name>hwInfinityCompressionHWUnhealthyEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityComputeFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityComputeFaultCrit|hwInfinityComputeFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityComputeFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityComputeFaultCritClear)}=0</expression>
                            <name>hwInfinityComputeFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityComputeFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityComputeFaultEmerg|hwInfinityComputeFaultEmergClear)&quot;].str(hwInfinityComputeFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityComputeFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityComputeFaultEmerg|hwInfinityComputeFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityComputeFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityComputeFaultEmergClear)}=0</expression>
                            <name>hwInfinityComputeFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityCorrectedHwErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityCorrectedHwErrorCrit|hwInfinityCorrectedHwErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityCorrectedHwError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityCorrectedHwErrorCritClear)}=0</expression>
                            <name>hwInfinityCorrectedHwErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityCorrectedHwErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityCorrectedHwErrorEmerg|hwInfinityCorrectedHwErrorEmergClear)&quot;].str(hwInfinityCorrectedHwErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityCorrectedHwErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityCorrectedHwErrorEmerg|hwInfinityCorrectedHwErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityCorrectedHwError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityCorrectedHwErrorEmergClear)}=0</expression>
                            <name>hwInfinityCorrectedHwErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityDelayedRebootCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityDelayedRebootCrit|hwInfinityDelayedRebootCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityDelayedReboot</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityDelayedRebootCritClear)}=0</expression>
                            <name>hwInfinityDelayedRebootCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityDelayedRebootEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityDelayedRebootEmerg|hwInfinityDelayedRebootEmergClear)&quot;].str(hwInfinityDelayedRebootEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityDelayedRebootEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityDelayedRebootEmerg|hwInfinityDelayedRebootEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityDelayedReboot</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityDelayedRebootEmergClear)}=0</expression>
                            <name>hwInfinityDelayedRebootEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityDIBFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityDIBFaultCrit|hwInfinityDIBFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityDIBFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityDIBFaultCritClear)}=0</expression>
                            <name>hwInfinityDIBFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityDIBFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityDIBFaultEmerg|hwInfinityDIBFaultEmergClear)&quot;].str(hwInfinityDIBFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityDIBFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityDIBFaultEmerg|hwInfinityDIBFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityDIBFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityDIBFaultEmergClear)}=0</expression>
                            <name>hwInfinityDIBFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityDimmFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityDimmFaultCrit|hwInfinityDimmFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityDimmFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityDimmFaultCritClear)}=0</expression>
                            <name>hwInfinityDimmFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityDimmFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityDimmFaultEmerg|hwInfinityDimmFaultEmergClear)&quot;].str(hwInfinityDimmFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityDimmFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityDimmFaultEmerg|hwInfinityDimmFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityDimmFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityDimmFaultEmergClear)}=0</expression>
                            <name>hwInfinityDimmFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityExternalFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityExternalFaultCrit|hwInfinityExternalFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityExternalFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityExternalFaultCritClear)}=0</expression>
                            <name>hwInfinityExternalFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityExternalFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityExternalFaultEmerg|hwInfinityExternalFaultEmergClear)&quot;].str(hwInfinityExternalFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityExternalFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityExternalFaultEmerg|hwInfinityExternalFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityExternalFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityExternalFaultEmergClear)}=0</expression>
                            <name>hwInfinityExternalFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityFanFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityFanFaultCrit|hwInfinityFanFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityFanFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityFanFaultCritClear)}=0</expression>
                            <name>hwInfinityFanFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityFanFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityFanFaultEmerg|hwInfinityFanFaultEmergClear)&quot;].str(hwInfinityFanFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityFanFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityFanFaultEmerg|hwInfinityFanFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityFanFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityFanFaultEmergClear)}=0</expression>
                            <name>hwInfinityFanFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityI2cFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityI2cFaultCrit|hwInfinityI2cFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityI2cFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityI2cFaultCritClear)}=0</expression>
                            <name>hwInfinityI2cFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityI2cFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityI2cFaultEmerg|hwInfinityI2cFaultEmergClear)&quot;].str(hwInfinityI2cFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityI2cFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityI2cFaultEmerg|hwInfinityI2cFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityI2cFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityI2cFaultEmergClear)}=0</expression>
                            <name>hwInfinityI2cFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityInternalfaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityInternalfaultCrit|hwInfinityInternalfaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityInternalfault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityInternalfaultCritClear)}=0</expression>
                            <name>hwInfinityInternalfaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityInternalfaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityInternalfaultEmerg|hwInfinityInternalfaultEmergClear)&quot;].str(hwInfinityInternalfaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityInternalfaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityInternalfaultEmerg|hwInfinityInternalfaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityInternalfault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityInternalfaultEmergClear)}=0</expression>
                            <name>hwInfinityInternalfaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityIOModuleFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityIOModuleFaultCrit|hwInfinityIOModuleFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityIOModuleFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityIOModuleFaultCritClear)}=0</expression>
                            <name>hwInfinityIOModuleFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityIOModuleFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityIOModuleFaultEmerg|hwInfinityIOModuleFaultEmergClear)&quot;].str(hwInfinityIOModuleFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityIOModuleFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityIOModuleFaultEmerg|hwInfinityIOModuleFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityIOModuleFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityIOModuleFaultEmergClear)}=0</expression>
                            <name>hwInfinityIOModuleFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityJmStateErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityJmStateErrorCrit|hwInfinityJmStateErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityJmStateError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityJmStateErrorCritClear)}=0</expression>
                            <name>hwInfinityJmStateErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityJmStateErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityJmStateErrorEmerg|hwInfinityJmStateErrorEmergClear)&quot;].str(hwInfinityJmStateErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityJmStateErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityJmStateErrorEmerg|hwInfinityJmStateErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityJmStateError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityJmStateErrorEmergClear)}=0</expression>
                            <name>hwInfinityJmStateErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityLocalBmcFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityLocalBmcFaultCrit|hwInfinityLocalBmcFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityLocalBmcFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityLocalBmcFaultCritClear)}=0</expression>
                            <name>hwInfinityLocalBmcFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityLocalBmcFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityLocalBmcFaultEmerg|hwInfinityLocalBmcFaultEmergClear)&quot;].str(hwInfinityLocalBmcFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityLocalBmcFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityLocalBmcFaultEmerg|hwInfinityLocalBmcFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityLocalBmcFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityLocalBmcFaultEmergClear)}=0</expression>
                            <name>hwInfinityLocalBmcFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityM2DriveFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityM2DriveFaultCrit|hwInfinityM2DriveFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityM2DriveFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityM2DriveFaultCritClear)}=0</expression>
                            <name>hwInfinityM2DriveFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityM2DriveFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityM2DriveFaultEmerg|hwInfinityM2DriveFaultEmergClear)&quot;].str(hwInfinityM2DriveFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityM2DriveFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityM2DriveFaultEmerg|hwInfinityM2DriveFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityM2DriveFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityM2DriveFaultEmergClear)}=0</expression>
                            <name>hwInfinityM2DriveFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityMidplaneFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityMidplaneFaultCrit|hwInfinityMidplaneFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityMidplaneFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityMidplaneFaultCritClear)}=0</expression>
                            <name>hwInfinityMidplaneFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityMidplaneFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityMidplaneFaultEmerg|hwInfinityMidplaneFaultEmergClear)&quot;].str(hwInfinityMidplaneFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityMidplaneFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityMidplaneFaultEmerg|hwInfinityMidplaneFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityMidplaneFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityMidplaneFaultEmergClear)}=0</expression>
                            <name>hwInfinityMidplaneFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityMnviProtoErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityMnviProtoErrorCrit|hwInfinityMnviProtoErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityMnviProtoError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityMnviProtoErrorCritClear)}=0</expression>
                            <name>hwInfinityMnviProtoErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityMnviProtoErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityMnviProtoErrorEmerg|hwInfinityMnviProtoErrorEmergClear)&quot;].str(hwInfinityMnviProtoErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityMnviProtoErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityMnviProtoErrorEmerg|hwInfinityMnviProtoErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityMnviProtoError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityMnviProtoErrorEmergClear)}=0</expression>
                            <name>hwInfinityMnviProtoErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityNtbLinkOutageCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityNtbLinkOutageCrit|hwInfinityNtbLinkOutageCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityNtbLinkOutage</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityNtbLinkOutageCritClear)}=0</expression>
                            <name>hwInfinityNtbLinkOutageCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityNtbLinkOutageEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityNtbLinkOutageEmerg|hwInfinityNtbLinkOutageEmergClear)&quot;].str(hwInfinityNtbLinkOutageEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityNtbLinkOutageEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityNtbLinkOutageEmerg|hwInfinityNtbLinkOutageEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityNtbLinkOutage</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityNtbLinkOutageEmergClear)}=0</expression>
                            <name>hwInfinityNtbLinkOutageEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityNtbPciFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityNtbPciFaultCrit|hwInfinityNtbPciFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityNtbPciFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityNtbPciFaultCritClear)}=0</expression>
                            <name>hwInfinityNtbPciFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityNtbPciFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityNtbPciFaultEmerg|hwInfinityNtbPciFaultEmergClear)&quot;].str(hwInfinityNtbPciFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityNtbPciFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityNtbPciFaultEmerg|hwInfinityNtbPciFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityNtbPciFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityNtbPciFaultEmergClear)}=0</expression>
                            <name>hwInfinityNtbPciFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityPeerBmcFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityPeerBmcFaultCrit|hwInfinityPeerBmcFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityPeerBmcFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityPeerBmcFaultCritClear)}=0</expression>
                            <name>hwInfinityPeerBmcFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityPeerBmcFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityPeerBmcFaultEmerg|hwInfinityPeerBmcFaultEmergClear)&quot;].str(hwInfinityPeerBmcFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityPeerBmcFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityPeerBmcFaultEmerg|hwInfinityPeerBmcFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityPeerBmcFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityPeerBmcFaultEmergClear)}=0</expression>
                            <name>hwInfinityPeerBmcFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityPmpFailureCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityPmpFailureCrit|hwInfinityPmpFailureCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityPmpFailure</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityPmpFailureCritClear)}=0</expression>
                            <name>hwInfinityPmpFailureCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityPmpFailureEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityPmpFailureEmerg|hwInfinityPmpFailureEmergClear)&quot;].str(hwInfinityPmpFailureEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityPmpFailureEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityPmpFailureEmerg|hwInfinityPmpFailureEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityPmpFailure</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityPmpFailureEmergClear)}=0</expression>
                            <name>hwInfinityPmpFailureEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityPowerRedundancyFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityPowerRedundancyFaultCrit|hwInfinityPowerRedundancyFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityPowerRedundancyFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityPowerRedundancyFaultCritClear)}=0</expression>
                            <name>hwInfinityPowerRedundancyFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityPowerRedundancyFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityPowerRedundancyFaultEmerg|hwInfinityPowerRedundancyFaultEmergClear)&quot;].str(hwInfinityPowerRedundancyFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityPowerRedundancyFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityPowerRedundancyFaultEmerg|hwInfinityPowerRedundancyFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityPowerRedundancyFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityPowerRedundancyFaultEmergClear)}=0</expression>
                            <name>hwInfinityPowerRedundancyFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityPowerSupplyFaultCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityPowerSupplyFaultCrit|hwInfinityPowerSupplyFaultCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityPowerSupplyFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityPowerSupplyFaultCritClear)}=0</expression>
                            <name>hwInfinityPowerSupplyFaultCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwInfinityPowerSupplyFaultEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwInfinityPowerSupplyFaultEmerg|hwInfinityPowerSupplyFaultEmergClear)&quot;].str(hwInfinityPowerSupplyFaultEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwInfinityPowerSupplyFaultEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwInfinityPowerSupplyFaultEmerg|hwInfinityPowerSupplyFaultEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwInfinityPowerSupplyFault</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwInfinityPowerSupplyFaultEmergClear)}=0</expression>
                            <name>hwInfinityPowerSupplyFaultEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwIPMIFanErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwIPMIFanErrorCrit|hwIPMIFanErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwIPMIFanError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwIPMIFanErrorCritClear)}=0</expression>
                            <name>hwIPMIFanErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwIPMIFanErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwIPMIFanErrorEmerg|hwIPMIFanErrorEmergClear)&quot;].str(hwIPMIFanErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwIPMIFanErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwIPMIFanErrorEmerg|hwIPMIFanErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwIPMIFanError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwIPMIFanErrorEmergClear)}=0</expression>
                            <name>hwIPMIFanErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwIPMIOtherErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwIPMIOtherErrorCrit|hwIPMIOtherErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwIPMIOtherError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwIPMIOtherErrorCritClear)}=0</expression>
                            <name>hwIPMIOtherErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwIPMIOtherErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwIPMIOtherErrorEmerg|hwIPMIOtherErrorEmergClear)&quot;].str(hwIPMIOtherErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwIPMIOtherErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwIPMIOtherErrorEmerg|hwIPMIOtherErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwIPMIOtherError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwIPMIOtherErrorEmergClear)}=0</expression>
                            <name>hwIPMIOtherErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwIPMITempErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwIPMITempErrorCrit|hwIPMITempErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwIPMITempError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwIPMITempErrorCritClear)}=0</expression>
                            <name>hwIPMITempErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwIPMITempErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwIPMITempErrorEmerg|hwIPMITempErrorEmergClear)&quot;].str(hwIPMITempErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwIPMITempErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwIPMITempErrorEmerg|hwIPMITempErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwIPMITempError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwIPMITempErrorEmergClear)}=0</expression>
                            <name>hwIPMITempErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwIPMIVoltageErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwIPMIVoltageErrorCrit|hwIPMIVoltageErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwIPMIVoltageError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwIPMIVoltageErrorCritClear)}=0</expression>
                            <name>hwIPMIVoltageErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwIPMIVoltageErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwIPMIVoltageErrorEmerg|hwIPMIVoltageErrorEmergClear)&quot;].str(hwIPMIVoltageErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwIPMIVoltageErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwIPMIVoltageErrorEmerg|hwIPMIVoltageErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwIPMIVoltageError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwIPMIVoltageErrorEmergClear)}=0</expression>
                            <name>hwIPMIVoltageErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwMemCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwMemCrit|hwMemCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwMem</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwMemCritClear)}=0</expression>
                            <name>hwMemCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwMemEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwMemEmerg|hwMemEmergClear)&quot;].str(hwMemEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwMemEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwMemEmerg|hwMemEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwMem</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwMemEmergClear)}=0</expression>
                            <name>hwMemEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwPowerCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwPowerCrit|hwPowerCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwPower</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwPowerCritClear)}=0</expression>
                            <name>hwPowerCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwPowerEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwPowerEmerg|hwPowerEmergClear)&quot;].str(hwPowerEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwPowerEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwPowerEmerg|hwPowerEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwPower</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwPowerEmergClear)}=0</expression>
                            <name>hwPowerEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwPwrSupplyOverCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwPwrSupplyOverCrit|hwPwrSupplyOverCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwPwrSupplyOver</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwPwrSupplyOverCritClear)}=0</expression>
                            <name>hwPwrSupplyOverCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwPwrSupplyOverEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwPwrSupplyOverEmerg|hwPwrSupplyOverEmergClear)&quot;].str(hwPwrSupplyOverEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwPwrSupplyOverEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwPwrSupplyOverEmerg|hwPwrSupplyOverEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwPwrSupplyOver</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwPwrSupplyOverEmergClear)}=0</expression>
                            <name>hwPwrSupplyOverEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwPwrSupplyUnderCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwPwrSupplyUnderCrit|hwPwrSupplyUnderCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwPwrSupplyUnder</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwPwrSupplyUnderCritClear)}=0</expression>
                            <name>hwPwrSupplyUnderCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwPwrSupplyUnderEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwPwrSupplyUnderEmerg|hwPwrSupplyUnderEmergClear)&quot;].str(hwPwrSupplyUnderEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwPwrSupplyUnderEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwPwrSupplyUnderEmerg|hwPwrSupplyUnderEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwPwrSupplyUnder</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwPwrSupplyUnderEmergClear)}=0</expression>
                            <name>hwPwrSupplyUnderEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwTempOverCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwTempOverCrit|hwTempOverCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwTempOver</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwTempOverCritClear)}=0</expression>
                            <name>hwTempOverCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwTempOverEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwTempOverEmerg|hwTempOverEmergClear)&quot;].str(hwTempOverEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwTempOverEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwTempOverEmerg|hwTempOverEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwTempOver</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwTempOverEmergClear)}=0</expression>
                            <name>hwTempOverEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwTempUnderCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwTempUnderCrit|hwTempUnderCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwTempUnder</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwTempUnderCritClear)}=0</expression>
                            <name>hwTempUnderCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwTempUnderEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwTempUnderEmerg|hwTempUnderEmergClear)&quot;].str(hwTempUnderEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwTempUnderEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwTempUnderEmerg|hwTempUnderEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwTempUnder</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwTempUnderEmergClear)}=0</expression>
                            <name>hwTempUnderEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwVersionErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwVersionErrorCrit|hwVersionErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwVersionError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwVersionErrorCritClear)}=0</expression>
                            <name>hwVersionErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwVersionErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwVersionErrorEmerg|hwVersionErrorEmergClear)&quot;].str(hwVersionErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwVersionErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwVersionErrorEmerg|hwVersionErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwVersionError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwVersionErrorEmergClear)}=0</expression>
                            <name>hwVersionErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwVoltageOverCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwVoltageOverCrit|hwVoltageOverCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwVoltageOver</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwVoltageOverCritClear)}=0</expression>
                            <name>hwVoltageOverCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwVoltageOverEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwVoltageOverEmerg|hwVoltageOverEmergClear)&quot;].str(hwVoltageOverEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwVoltageOverEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwVoltageOverEmerg|hwVoltageOverEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwVoltageOver</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwVoltageOverEmergClear)}=0</expression>
                            <name>hwVoltageOverEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwVoltageUnderCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwVoltageUnderCrit|hwVoltageUnderCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwVoltageUnder</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwVoltageUnderCritClear)}=0</expression>
                            <name>hwVoltageUnderCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>hwVoltageUnderEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(hwVoltageUnderEmerg|hwVoltageUnderEmergClear)&quot;].str(hwVoltageUnderEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>hwVoltageUnderEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(hwVoltageUnderEmerg|hwVoltageUnderEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>hwVoltageUnder</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(hwVoltageUnderEmergClear)}=0</expression>
                            <name>hwVoltageUnderEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineClusterCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineClusterCrit|jobEngineClusterCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineCluster</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineClusterCritClear)}=0</expression>
                            <name>jobEngineClusterCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>jobEngineClusterEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(jobEngineClusterEmerg|jobEngineClusterEmergClear)&quot;].str(jobEngineClusterEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineClusterEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineClusterEmerg|jobEngineClusterEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineCluster</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineClusterEmergClear)}=0</expression>
                            <name>jobEngineClusterEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineErrorCrit|jobEngineErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineErrorCritClear)}=0</expression>
                            <name>jobEngineErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>jobEngineErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(jobEngineErrorEmerg|jobEngineErrorEmergClear)&quot;].str(jobEngineErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineErrorEmerg|jobEngineErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineErrorEmergClear)}=0</expression>
                            <name>jobEngineErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineJobPhaseBeginCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineJobPhaseBeginCrit|jobEngineJobPhaseBeginCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineJobPhaseBegin</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineJobPhaseBeginCritClear)}=0</expression>
                            <name>jobEngineJobPhaseBeginCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>jobEngineJobPhaseBeginEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(jobEngineJobPhaseBeginEmerg|jobEngineJobPhaseBeginEmergClear)&quot;].str(jobEngineJobPhaseBeginEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineJobPhaseBeginEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineJobPhaseBeginEmerg|jobEngineJobPhaseBeginEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineJobPhaseBegin</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineJobPhaseBeginEmergClear)}=0</expression>
                            <name>jobEngineJobPhaseBeginEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineJobPhaseEndCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineJobPhaseEndCrit|jobEngineJobPhaseEndCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineJobPhaseEnd</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineJobPhaseEndCritClear)}=0</expression>
                            <name>jobEngineJobPhaseEndCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>jobEngineJobPhaseEndEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(jobEngineJobPhaseEndEmerg|jobEngineJobPhaseEndEmergClear)&quot;].str(jobEngineJobPhaseEndEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineJobPhaseEndEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineJobPhaseEndEmerg|jobEngineJobPhaseEndEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineJobPhaseEnd</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineJobPhaseEndEmergClear)}=0</expression>
                            <name>jobEngineJobPhaseEndEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineJobPolicyCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineJobPolicyCrit|jobEngineJobPolicyCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineJobPolicy</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineJobPolicyCritClear)}=0</expression>
                            <name>jobEngineJobPolicyCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>jobEngineJobPolicyEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(jobEngineJobPolicyEmerg|jobEngineJobPolicyEmergClear)&quot;].str(jobEngineJobPolicyEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineJobPolicyEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineJobPolicyEmerg|jobEngineJobPolicyEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineJobPolicy</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineJobPolicyEmergClear)}=0</expression>
                            <name>jobEngineJobPolicyEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineJobStateCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineJobStateCrit|jobEngineJobStateCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineJobState</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineJobStateCritClear)}=0</expression>
                            <name>jobEngineJobStateCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>jobEngineJobStateEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(jobEngineJobStateEmerg|jobEngineJobStateEmergClear)&quot;].str(jobEngineJobStateEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jobEngineJobStateEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(jobEngineJobStateEmerg|jobEngineJobStateEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>jobEngineJobState</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(jobEngineJobStateEmergClear)}=0</expression>
                            <name>jobEngineJobStateEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>kernVmProcessKilledCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(kernVmProcessKilledCrit|kernVmProcessKilledCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>kernVmProcessKilled</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(kernVmProcessKilledCritClear)}=0</expression>
                            <name>kernVmProcessKilledCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>kernVmProcessKilledEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(kernVmProcessKilledEmerg|kernVmProcessKilledEmergClear)&quot;].str(kernVmProcessKilledEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>kernVmProcessKilledEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(kernVmProcessKilledEmerg|kernVmProcessKilledEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>kernVmProcessKilled</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(kernVmProcessKilledEmergClear)}=0</expression>
                            <name>kernVmProcessKilledEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>keyManagerCloudPoolsDomainFailedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(keyManagerCloudPoolsDomainFailedCrit|keyManagerCloudPoolsDomainFailedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>keyManagerCloudPoolsDomainFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(keyManagerCloudPoolsDomainFailedCritClear)}=0</expression>
                            <name>keyManagerCloudPoolsDomainFailedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>keyManagerCloudPoolsDomainFailedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(keyManagerCloudPoolsDomainFailedEmerg|keyManagerCloudPoolsDomainFailedEmergClear)&quot;].str(keyManagerCloudPoolsDomainFailedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>keyManagerCloudPoolsDomainFailedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(keyManagerCloudPoolsDomainFailedEmerg|keyManagerCloudPoolsDomainFailedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>keyManagerCloudPoolsDomainFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(keyManagerCloudPoolsDomainFailedEmergClear)}=0</expression>
                            <name>keyManagerCloudPoolsDomainFailedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>keyManagerSedsDomainFailedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(keyManagerSedsDomainFailedCrit|keyManagerSedsDomainFailedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>keyManagerSedsDomainFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(keyManagerSedsDomainFailedCritClear)}=0</expression>
                            <name>keyManagerSedsDomainFailedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>keyManagerSedsDomainFailedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(keyManagerSedsDomainFailedEmerg|keyManagerSedsDomainFailedEmergClear)&quot;].str(keyManagerSedsDomainFailedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>keyManagerSedsDomainFailedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(keyManagerSedsDomainFailedEmerg|keyManagerSedsDomainFailedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>keyManagerSedsDomainFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(keyManagerSedsDomainFailedEmergClear)}=0</expression>
                            <name>keyManagerSedsDomainFailedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>licenseActivationIncompleteCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(licenseActivationIncompleteCrit|licenseActivationIncompleteCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>licenseActivationIncomplete</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(licenseActivationIncompleteCritClear)}=0</expression>
                            <name>licenseActivationIncompleteCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>licenseActivationIncompleteEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(licenseActivationIncompleteEmerg|licenseActivationIncompleteEmergClear)&quot;].str(licenseActivationIncompleteEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>licenseActivationIncompleteEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(licenseActivationIncompleteEmerg|licenseActivationIncompleteEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>licenseActivationIncomplete</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(licenseActivationIncompleteEmergClear)}=0</expression>
                            <name>licenseActivationIncompleteEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>licenseEntitlementsExceededCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(licenseEntitlementsExceededCrit|licenseEntitlementsExceededCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>licenseEntitlementsExceeded</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(licenseEntitlementsExceededCritClear)}=0</expression>
                            <name>licenseEntitlementsExceededCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>licenseEntitlementsExceededEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(licenseEntitlementsExceededEmerg|licenseEntitlementsExceededEmergClear)&quot;].str(licenseEntitlementsExceededEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>licenseEntitlementsExceededEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(licenseEntitlementsExceededEmerg|licenseEntitlementsExceededEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>licenseEntitlementsExceeded</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(licenseEntitlementsExceededEmergClear)}=0</expression>
                            <name>licenseEntitlementsExceededEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>licenseExpirationCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(licenseExpirationCrit|licenseExpirationCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>licenseExpiration</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(licenseExpirationCritClear)}=0</expression>
                            <name>licenseExpirationCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>licenseExpirationEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(licenseExpirationEmerg|licenseExpirationEmergClear)&quot;].str(licenseExpirationEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>licenseExpirationEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(licenseExpirationEmerg|licenseExpirationEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>licenseExpiration</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(licenseExpirationEmergClear)}=0</expression>
                            <name>licenseExpirationEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>lwioCAThrottlingCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(lwioCAThrottlingCrit|lwioCAThrottlingCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>lwioCAThrottling</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(lwioCAThrottlingCritClear)}=0</expression>
                            <name>lwioCAThrottlingCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>lwioCAThrottlingEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(lwioCAThrottlingEmerg|lwioCAThrottlingEmergClear)&quot;].str(lwioCAThrottlingEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>lwioCAThrottlingEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(lwioCAThrottlingEmerg|lwioCAThrottlingEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>lwioCAThrottling</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(lwioCAThrottlingEmergClear)}=0</expression>
                            <name>lwioCAThrottlingEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>lwioMemoryThrottlingCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(lwioMemoryThrottlingCrit|lwioMemoryThrottlingCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>lwioMemoryThrottling</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(lwioMemoryThrottlingCritClear)}=0</expression>
                            <name>lwioMemoryThrottlingCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>lwioMemoryThrottlingEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(lwioMemoryThrottlingEmerg|lwioMemoryThrottlingEmergClear)&quot;].str(lwioMemoryThrottlingEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>lwioMemoryThrottlingEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(lwioMemoryThrottlingEmerg|lwioMemoryThrottlingEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>lwioMemoryThrottling</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(lwioMemoryThrottlingEmergClear)}=0</expression>
                            <name>lwioMemoryThrottlingEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>lwioParamCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(lwioParamCrit|lwioParamCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>lwioParam</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(lwioParamCritClear)}=0</expression>
                            <name>lwioParamCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>lwioParamEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(lwioParamEmerg|lwioParamEmergClear)&quot;].str(lwioParamEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>lwioParamEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(lwioParamEmerg|lwioParamEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>lwioParam</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(lwioParamEmergClear)}=0</expression>
                            <name>lwioParamEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mcpProcFailedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mcpProcFailedCrit|mcpProcFailedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mcpProcFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mcpProcFailedCritClear)}=0</expression>
                            <name>mcpProcFailedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>mcpProcFailedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(mcpProcFailedEmerg|mcpProcFailedEmergClear)&quot;].str(mcpProcFailedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mcpProcFailedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mcpProcFailedEmerg|mcpProcFailedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mcpProcFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mcpProcFailedEmergClear)}=0</expression>
                            <name>mcpProcFailedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mcpProcKilledCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mcpProcKilledCrit|mcpProcKilledCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mcpProcKilled</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mcpProcKilledCritClear)}=0</expression>
                            <name>mcpProcKilledCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>mcpProcKilledEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(mcpProcKilledEmerg|mcpProcKilledEmergClear)&quot;].str(mcpProcKilledEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mcpProcKilledEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mcpProcKilledEmerg|mcpProcKilledEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mcpProcKilled</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mcpProcKilledEmergClear)}=0</expression>
                            <name>mcpProcKilledEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mixedSedNonSedClusterCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mixedSedNonSedClusterCrit|mixedSedNonSedClusterCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mixedSedNonSedCluster</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mixedSedNonSedClusterCritClear)}=0</expression>
                            <name>mixedSedNonSedClusterCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>mixedSedNonSedClusterEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(mixedSedNonSedClusterEmerg|mixedSedNonSedClusterEmergClear)&quot;].str(mixedSedNonSedClusterEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mixedSedNonSedClusterEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mixedSedNonSedClusterEmerg|mixedSedNonSedClusterEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mixedSedNonSedCluster</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mixedSedNonSedClusterEmergClear)}=0</expression>
                            <name>mixedSedNonSedClusterEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mountdClientMountFailedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mountdClientMountFailedCrit|mountdClientMountFailedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mountdClientMountFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mountdClientMountFailedCritClear)}=0</expression>
                            <name>mountdClientMountFailedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>mountdClientMountFailedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(mountdClientMountFailedEmerg|mountdClientMountFailedEmergClear)&quot;].str(mountdClientMountFailedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mountdClientMountFailedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mountdClientMountFailedEmerg|mountdClientMountFailedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mountdClientMountFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mountdClientMountFailedEmergClear)}=0</expression>
                            <name>mountdClientMountFailedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mountdHostLookupFailedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mountdHostLookupFailedCrit|mountdHostLookupFailedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mountdHostLookupFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mountdHostLookupFailedCritClear)}=0</expression>
                            <name>mountdHostLookupFailedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>mountdHostLookupFailedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(mountdHostLookupFailedEmerg|mountdHostLookupFailedEmergClear)&quot;].str(mountdHostLookupFailedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>mountdHostLookupFailedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(mountdHostLookupFailedEmerg|mountdHostLookupFailedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>mountdHostLookupFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(mountdHostLookupFailedEmergClear)}=0</expression>
                            <name>mountdHostLookupFailedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netAggStatusCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netAggStatusCrit|netAggStatusCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netAggStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netAggStatusCritClear)}=0</expression>
                            <name>netAggStatusCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>netAggStatusEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(netAggStatusEmerg|netAggStatusEmergClear)&quot;].str(netAggStatusEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netAggStatusEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netAggStatusEmerg|netAggStatusEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netAggStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netAggStatusEmergClear)}=0</expression>
                            <name>netAggStatusEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netFabricMgmtConnectivityCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netFabricMgmtConnectivityCrit|netFabricMgmtConnectivityCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netFabricMgmtConnectivity</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netFabricMgmtConnectivityCritClear)}=0</expression>
                            <name>netFabricMgmtConnectivityCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>netFabricMgmtConnectivityEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(netFabricMgmtConnectivityEmerg|netFabricMgmtConnectivityEmergClear)&quot;].str(netFabricMgmtConnectivityEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netFabricMgmtConnectivityEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netFabricMgmtConnectivityEmerg|netFabricMgmtConnectivityEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netFabricMgmtConnectivity</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netFabricMgmtConnectivityEmergClear)}=0</expression>
                            <name>netFabricMgmtConnectivityEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netFabricSNMPConnectivityCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netFabricSNMPConnectivityCrit|netFabricSNMPConnectivityCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netFabricSNMPConnectivity</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netFabricSNMPConnectivityCritClear)}=0</expression>
                            <name>netFabricSNMPConnectivityCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>netFabricSNMPConnectivityEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(netFabricSNMPConnectivityEmerg|netFabricSNMPConnectivityEmergClear)&quot;].str(netFabricSNMPConnectivityEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netFabricSNMPConnectivityEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netFabricSNMPConnectivityEmerg|netFabricSNMPConnectivityEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netFabricSNMPConnectivity</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netFabricSNMPConnectivityEmergClear)}=0</expression>
                            <name>netFabricSNMPConnectivityEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netFabricStatusCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netFabricStatusCrit|netFabricStatusCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netFabricStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netFabricStatusCritClear)}=0</expression>
                            <name>netFabricStatusCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>netFabricStatusEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(netFabricStatusEmerg|netFabricStatusEmergClear)&quot;].str(netFabricStatusEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netFabricStatusEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netFabricStatusEmerg|netFabricStatusEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netFabricStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netFabricStatusEmergClear)}=0</expression>
                            <name>netFabricStatusEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netIntStatusCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netIntStatusCrit|netIntStatusCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netIntStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netIntStatusCritClear)}=0</expression>
                            <name>netIntStatusCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>netIntStatusEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(netIntStatusEmerg|netIntStatusEmergClear)&quot;].str(netIntStatusEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netIntStatusEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netIntStatusEmerg|netIntStatusEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netIntStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netIntStatusEmergClear)}=0</expression>
                            <name>netIntStatusEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netStatusCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netStatusCrit|netStatusCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netStatusCritClear)}=0</expression>
                            <name>netStatusCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>netStatusEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(netStatusEmerg|netStatusEmergClear)&quot;].str(netStatusEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>netStatusEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(netStatusEmerg|netStatusEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>netStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(netStatusEmergClear)}=0</expression>
                            <name>netStatusEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>nfsCookieTranslationFailedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nfsCookieTranslationFailedCrit|nfsCookieTranslationFailedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nfsCookieTranslationFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(nfsCookieTranslationFailedCritClear)}=0</expression>
                            <name>nfsCookieTranslationFailedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>nfsCookieTranslationFailedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(nfsCookieTranslationFailedEmerg|nfsCookieTranslationFailedEmergClear)&quot;].str(nfsCookieTranslationFailedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>nfsCookieTranslationFailedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nfsCookieTranslationFailedEmerg|nfsCookieTranslationFailedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nfsCookieTranslationFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(nfsCookieTranslationFailedEmergClear)}=0</expression>
                            <name>nfsCookieTranslationFailedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>nfsIdentityQueryFailedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nfsIdentityQueryFailedCrit|nfsIdentityQueryFailedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nfsIdentityQueryFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(nfsIdentityQueryFailedCritClear)}=0</expression>
                            <name>nfsIdentityQueryFailedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>nfsIdentityQueryFailedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(nfsIdentityQueryFailedEmerg|nfsIdentityQueryFailedEmergClear)&quot;].str(nfsIdentityQueryFailedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>nfsIdentityQueryFailedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nfsIdentityQueryFailedEmerg|nfsIdentityQueryFailedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nfsIdentityQueryFailed</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(nfsIdentityQueryFailedEmergClear)}=0</expression>
                            <name>nfsIdentityQueryFailedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>nodeShutdown</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nodeShutdownEmerg|nodeShutdownCrit|nodeShutdownWarn|nodeShutdownInfo|nodeShutdownEmergClear|nodeShutdownCritClear|nodeShutdownWarnClear|nodeShutdownInfoClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nodeShutdown</name>
                        </application>
                    </applications>
                </item>
                <item>
                    <name>nodeShutdownFailCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nodeShutdownFailCrit|nodeShutdownFailCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nodeShutdown</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(nodeShutdownFailCritClear)}=0</expression>
                            <name>nodeShutdownFailCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>nodeShutdownFailEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(nodeShutdownFailEmerg|nodeShutdownFailEmergClear)&quot;].str(nodeShutdownFailEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>nodeShutdownFailEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nodeShutdownFailEmerg|nodeShutdownFailEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nodeShutdown</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(nodeShutdownFailEmergClear)}=0</expression>
                            <name>nodeShutdownFailEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>nodeStatusCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nodeStatusCrit|nodeStatusCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nodeStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(nodeStatusCritClear)}=0</expression>
                            <name>nodeStatusCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>nodeShutdownFailEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(nodeShutdownFailEmerg|nodeShutdownFailEmergClear)&quot;].str(nodeShutdownFailEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>nodeStatusEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(nodeStatusEmerg|nodeStatusEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>nodeStatus</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(nodeStatusEmergClear)}=0</expression>
                            <name>nodeStatusEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>partitionUsageCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(partitionUsageCrit|partitionUsageCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>partitionUsage</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(partitionUsageCritClear)}=0</expression>
                            <name>partitionUsageCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>partitionUsageEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(partitionUsageEmerg|partitionUsageEmergClear)&quot;].str(partitionUsageEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>partitionUsageEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(partitionUsageEmerg|partitionUsageEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>partitionUsage</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(partitionUsageEmergClear)}=0</expression>
                            <name>partitionUsageEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>pdmServiceDegradedCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(pdmServiceDegradedCrit|pdmServiceDegradedCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>pdmServiceDegraded</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(pdmServiceDegradedCritClear)}=0</expression>
                            <name>pdmServiceDegradedCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>pdmServiceDegradedEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(pdmServiceDegradedEmerg|pdmServiceDegradedEmergClear)&quot;].str(pdmServiceDegradedEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>pdmServiceDegradedEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(pdmServiceDegradedEmerg|pdmServiceDegradedEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>pdmServiceDegraded</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(pdmServiceDegradedEmergClear)}=0</expression>
                            <name>pdmServiceDegradedEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>quotaErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(quotaErrorCrit|quotaErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>quotaError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(quotaErrorCritClear)}=0</expression>
                            <name>quotaErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>quotaErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(quotaErrorEmerg|quotaErrorEmergClear)&quot;].str(quotaErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>quotaErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(quotaErrorEmerg|quotaErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>quotaError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(quotaErrorEmergClear)}=0</expression>
                            <name>quotaErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>quotaNotifyErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(quotaNotifyErrorCrit|quotaNotifyErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>quotaNotifyError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(quotaNotifyErrorCritClear)}=0</expression>
                            <name>quotaNotifyErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>quotaNotifyErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(quotaNotifyErrorEmerg|quotaNotifyErrorEmergClear)&quot;].str(quotaNotifyErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>quotaNotifyErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(quotaNotifyErrorEmerg|quotaNotifyErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>quotaNotifyError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(quotaNotifyErrorEmergClear)}=0</expression>
                            <name>quotaNotifyErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>quotaThreshErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(quotaThreshErrorCrit|quotaThreshErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>quotaThreshError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(quotaThreshErrorCritClear)}=0</expression>
                            <name>quotaThreshErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>quotaThreshErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(quotaThreshErrorEmerg|quotaThreshErrorEmergClear)&quot;].str(quotaThreshErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>quotaThreshErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(quotaThreshErrorEmerg|quotaThreshErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>quotaThreshError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(quotaThreshErrorEmergClear)}=0</expression>
                            <name>quotaThreshErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>sasPhyErrorControllerCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(sasPhyErrorControllerCrit|sasPhyErrorControllerCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>sasPhyErrorController</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(sasPhyErrorControllerCritClear)}=0</expression>
                            <name>sasPhyErrorControllerCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>sasPhyErrorControllerEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(sasPhyErrorControllerEmerg|sasPhyErrorControllerEmergClear)&quot;].str(sasPhyErrorControllerEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>sasPhyErrorControllerEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(sasPhyErrorControllerEmerg|sasPhyErrorControllerEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>sasPhyErrorController</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(sasPhyErrorControllerEmergClear)}=0</expression>
                            <name>sasPhyErrorControllerEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>sasPhyErrorExpanderCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(sasPhyErrorExpanderCrit|sasPhyErrorExpanderCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>sasPhyErrorExpander</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(sasPhyErrorExpanderCritClear)}=0</expression>
                            <name>sasPhyErrorExpanderCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>sasPhyErrorExpanderEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(sasPhyErrorExpanderEmerg|sasPhyErrorExpanderEmergClear)&quot;].str(sasPhyErrorExpanderEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>sasPhyErrorExpanderEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(sasPhyErrorExpanderEmerg|sasPhyErrorExpanderEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>sasPhyErrorExpander</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(sasPhyErrorExpanderEmergClear)}=0</expression>
                            <name>sasPhyErrorExpanderEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>sensorMonitorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(sensorMonitorCrit|sensorMonitorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>sensorMonitor</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(sensorMonitorCritClear)}=0</expression>
                            <name>sensorMonitorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>sensorMonitorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(sensorMonitorEmerg|sensorMonitorEmergClear)&quot;].str(sensorMonitorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>sensorMonitorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(sensorMonitorEmerg|sensorMonitorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>sensorMonitor</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(sensorMonitorEmergClear)}=0</expression>
                            <name>sensorMonitorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>siqErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(siqErrorCrit|siqErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>siqError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(siqErrorCritClear)}=0</expression>
                            <name>siqErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>siqErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(siqErrorEmerg|siqErrorEmergClear)&quot;].str(siqErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>siqErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(siqErrorEmerg|siqErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>siqError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(siqErrorEmergClear)}=0</expression>
                            <name>siqErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>snapshotErrorCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(snapshotErrorCrit|snapshotErrorCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>snapshotError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(snapshotErrorCritClear)}=0</expression>
                            <name>snapshotErrorCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>snapshotErrorEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(snapshotErrorEmerg|snapshotErrorEmergClear)&quot;].str(snapshotErrorEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>snapshotErrorEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(snapshotErrorEmerg|snapshotErrorEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>snapshotError</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(snapshotErrorEmergClear)}=0</expression>
                            <name>snapshotErrorEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>snapshotReserveCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(snapshotReserveCrit|snapshotReserveCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>snapshotReserve</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(snapshotReserveCritClear)}=0</expression>
                            <name>snapshotReserveCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>snapshotReserveEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(snapshotReserveEmerg|snapshotReserveEmergClear)&quot;].str(snapshotReserveEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>snapshotReserveEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(snapshotReserveEmerg|snapshotReserveEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>snapshotReserve</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(snapshotReserveEmergClear)}=0</expression>
                            <name>snapshotReserveEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>srsProblemCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(srsProblemCrit|srsProblemCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>srsProblem</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(srsProblemCritClear)}=0</expression>
                            <name>srsProblemCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>srsProblemEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(srsProblemEmerg|srsProblemEmergClear)&quot;].str(srsProblemEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>srsProblemEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(srsProblemEmerg|srsProblemEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>srsProblem</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(srsProblemEmergClear)}=0</expression>
                            <name>srsProblemEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ssdUsageCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(ssdUsageCrit|ssdUsageCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>ssdUsage</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(ssdUsageCritClear)}=0</expression>
                            <name>ssdUsageCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>ssdUsageEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(ssdUsageEmerg|ssdUsageEmergClear)&quot;].str(diskPoolOldDbVersionEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>ssdUsageEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(ssdUsageEmerg|ssdUsageEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>ssdUsage</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(diskPoolOldDbVersionEmergClear)}=0</expression>
                            <name>ssdUsageEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>suggestedProtectionCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(suggestedProtectionCrit|suggestedProtectionCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>suggestedProtection</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(suggestedProtectionCritClear)}=0</expression>
                            <name>suggestedProtectionCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>suggestedProtectionEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(suggestedProtectionEmerg|suggestedProtectionEmergClear)&quot;].str(suggestedProtectionEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>suggestedProtectionEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(suggestedProtectionEmerg|suggestedProtectionEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>suggestedProtection</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(suggestedProtectionEmergClear)}=0</expression>
                            <name>suggestedProtectionEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>testEvent2Crit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(testEvent2Crit|testEvent2CritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>testEvent2</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(testEvent2CritClear)}=0</expression>
                            <name>testEvent2Crit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>testEvent2Emerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(testEvent2Emerg|testEvent2EmergClear)&quot;].str(testEvent2EmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>testEvent2Emerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(testEvent2Emerg|testEvent2EmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>testEvent2</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(testEvent2EmergClear)}=0</expression>
                            <name>testEvent2Emerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>testEventCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(testEventCrit|testEventCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>testEvent</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(testEventCritClear)}=0</expression>
                            <name>testEventCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>testEventEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(testEventEmerg|testEventEmergClear)&quot;].str(testEventEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>testEventEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(testEventEmerg|testEventEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>testEvent</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(testEventEmergClear)}=0</expression>
                            <name>testEventEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>underprovisionedNodePoolCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(underprovisionedNodePoolCrit|underprovisionedNodePoolCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>underprovisionedNodePool</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(underprovisionedNodePoolCritClear)}=0</expression>
                            <name>underprovisionedNodePoolCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>underprovisionedNodePoolEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(underprovisionedNodePoolEmerg|underprovisionedNodePoolEmergClear)&quot;].str(underprovisionedNodePoolEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>underprovisionedNodePoolEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(underprovisionedNodePoolEmerg|underprovisionedNodePoolEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>underprovisionedNodePool</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(underprovisionedNodePoolEmergClear)}=0</expression>
                            <name>underprovisionedNodePoolEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>unprovisionedNodeCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(unprovisionedNodeCrit|unprovisionedNodeCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>unprovisionedNode</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(unprovisionedNodeCritClear)}=0</expression>
                            <name>unprovisionedNodeCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>unprovisionedNodeEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(unprovisionedNodeEmerg|unprovisionedNodeEmergClear)&quot;].str(unprovisionedNodeEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>unprovisionedNodeEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(unprovisionedNodeEmerg|unprovisionedNodeEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>unprovisionedNode</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(unprovisionedNodeEmergClear)}=0</expression>
                            <name>unprovisionedNodeEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeClusterEventCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeClusterEventCrit|upgradeClusterEventCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeClusterEvent</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeClusterEventCritClear)}=0</expression>
                            <name>upgradeClusterEventCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>upgradeClusterEventEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(upgradeClusterEventEmerg|upgradeClusterEventEmergClear)&quot;].str(upgradeClusterEventEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeClusterEventEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeClusterEventEmerg|upgradeClusterEventEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeClusterEvent</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeClusterEventEmergClear)}=0</expression>
                            <name>upgradeClusterEventEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeFinishCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeFinishCrit|upgradeFinishCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeFinish</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeFinishCritClear)}=0</expression>
                            <name>upgradeFinishCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>upgradeFinishEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(upgradeFinishEmerg|upgradeFinishEmergClear)&quot;].str(upgradeFinishEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeFinishEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeFinishEmerg|upgradeFinishEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeFinish</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeFinishEmergClear)}=0</expression>
                            <name>upgradeFinishEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeHangCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeHangCrit|upgradeHangCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeHang</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeHangCritClear)}=0</expression>
                            <name>upgradeHangCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>upgradeHangEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(upgradeHangEmerg|upgradeHangEmergClear)&quot;].str(upgradeHangEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeHangEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeHangEmerg|upgradeHangEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeHang</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeHangEmergClear)}=0</expression>
                            <name>upgradeHangEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeHookHangCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeHookHangCrit|upgradeHookHangCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeHookHang</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeHookHangCritClear)}=0</expression>
                            <name>upgradeHookHangCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>upgradeHookHangEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(upgradeHookHangEmerg|upgradeHookHangEmergClear)&quot;].str(upgradeHookHangEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeHookHangEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeHookHangEmerg|upgradeHookHangEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeHookHang</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeHookHangEmergClear)}=0</expression>
                            <name>upgradeHookHangEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeNodeEventCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeNodeEventCrit|upgradeNodeEventCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeNodeEvent</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeNodeEventCritClear)}=0</expression>
                            <name>upgradeNodeEventCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>upgradeNodeEventEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(upgradeNodeEventEmerg|upgradeNodeEventEmergClear)&quot;].str(upgradeNodeEventEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeNodeEventEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeNodeEventEmerg|upgradeNodeEventEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeNodeEvent</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeNodeEventEmergClear)}=0</expression>
                            <name>upgradeNodeEventEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeRollbackStartCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeRollbackStartCrit|upgradeRollbackStartCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeRollbackStart</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeRollbackStartCritClear)}=0</expression>
                            <name>upgradeRollbackStartCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>upgradeRollbackStartEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(upgradeRollbackStartEmerg|upgradeRollbackStartEmergClear)&quot;].str(upgradeRollbackStartEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeRollbackStartEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeRollbackStartEmerg|upgradeRollbackStartEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeRollbackStart</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeRollbackStartEmergClear)}=0</expression>
                            <name>upgradeRollbackStartEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeStartCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeStartCrit|upgradeStartCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeStart</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeStartCritClear)}=0</expression>
                            <name>upgradeStartCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>upgradeStartEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(upgradeStartEmerg|upgradeStartEmergClear)&quot;].str(upgradeStartEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>upgradeStartEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(upgradeStartEmerg|upgradeStartEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>upgradeStart</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(upgradeStartEmergClear)}=0</expression>
                            <name>upgradeStartEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winAuthUpgradeCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winAuthUpgradeCrit|winAuthUpgradeCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winAuthUpgrade</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winAuthUpgradeCritClear)}=0</expression>
                            <name>winAuthUpgradeCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>winAuthUpgradeEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(winAuthUpgradeEmerg|winAuthUpgradeEmergClear)&quot;].str(winAuthUpgradeEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winAuthUpgradeEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winAuthUpgradeEmerg|winAuthUpgradeEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winAuthUpgrade</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winAuthUpgradeEmergClear)}=0</expression>
                            <name>winAuthUpgradeEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winIDmapRulesParseFailCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winIDmapRulesParseFailCrit|winIDmapRulesParseFailCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winIDmapRulesParseFail</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winIDmapRulesParseFailCritClear)}=0</expression>
                            <name>winIDmapRulesParseFailCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>winIDmapRulesParseFailEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(winIDmapRulesParseFailEmerg|winIDmapRulesParseFailEmergClear)&quot;].str(winIDmapRulesParseFailEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winIDmapRulesParseFailEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winIDmapRulesParseFailEmerg|winIDmapRulesParseFailEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winIDmapRulesParseFail</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winIDmapRulesParseFailEmergClear)}=0</expression>
                            <name>winIDmapRulesParseFailEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winNetAuthCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winNetAuthCrit|winNetAuthCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winNetAuth</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winNetAuthCritClear)}=0</expression>
                            <name>winNetAuthCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>winNetAuthEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(winNetAuthEmerg|winNetAuthEmergClear)&quot;].str(winNetAuthEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winNetAuthEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winNetAuthEmerg|winNetAuthEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winNetAuth</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winNetAuthEmergClear)}=0</expression>
                            <name>winNetAuthEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winNetMapFullCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winNetMapFullCrit|winNetMapFullCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winNetMapFull</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winNetMapFullCritClear)}=0</expression>
                            <name>winNetMapFullCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>winNetMapFullEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(winNetMapFullEmerg|winNetMapFullEmergClear)&quot;].str(winNetMapFullEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winNetMapFullEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winNetMapFullEmerg|winNetMapFullEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winNetMapFull</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winNetMapFullEmergClear)}=0</expression>
                            <name>winNetMapFullEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winSmbUpgradeCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winSmbUpgradeCrit|winSmbUpgradeCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winSmbUpgrade</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winSmbUpgradeCritClear)}=0</expression>
                            <name>winSmbUpgradeCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>winSmbUpgradeEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(winSmbUpgradeEmerg|winSmbUpgradeEmergClear)&quot;].str(winSmbUpgradeEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winSmbUpgradeEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winSmbUpgradeEmerg|winSmbUpgradeEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winSmbUpgrade</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winSmbUpgradeEmergClear)}=0</expression>
                            <name>winSmbUpgradeEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winTimeConnectivityLostCrit</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winTimeConnectivityLostCrit|winTimeConnectivityLostCritClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winTimeConnectivityLost</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winTimeConnectivityLostCritClear)}=0</expression>
                            <name>winTimeConnectivityLostCrit</name>
                            <priority>HIGH</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>winTimeConnectivityLostEmerg</name>
                                    <expression>{ISILON snmp traps:snmptrap[&quot;(winTimeConnectivityLostEmerg|winTimeConnectivityLostEmergClear)&quot;].str(winTimeConnectivityLostEmergClear)}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>winTimeConnectivityLostEmerg</name>
                    <type>SNMP_TRAP</type>
                    <key>snmptrap[&quot;(winTimeConnectivityLostEmerg|winTimeConnectivityLostEmergClear)&quot;]</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>LOG</value_type>
                    <applications>
                        <application>
                            <name>winTimeConnectivityLost</name>
                        </application>
                    </applications>
                    <logtimefmt>hh:mm:sszyyyy/MM/dd</logtimefmt>
                    <triggers>
                        <trigger>
                            <expression>{str(winTimeConnectivityLostEmergClear)}=0</expression>
                            <name>winTimeConnectivityLostEmerg</name>
                            <priority>DISASTER</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <macros>
                <macro>
                    <macro>{$ORDERLYSHUTDOWN}</macro>
                    <value>2m</value>
                </macro>
            </macros>
        </template>
    </templates>
</zabbix_export>
